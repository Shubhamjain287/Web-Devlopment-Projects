import com.mashape.unirest.http.HttpResponse;
import com.mashape.unirest.http.Unirest;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.util.StringTokenizer;
import java.util.logging.*;
import javax.imageio.ImageIO;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author acer
 */
public class addroom extends javax.swing.JFrame {

        File f;
    public addroom() {
        initComponents();
        fetchcategories();
      setSize(800,540);
      setLocationRelativeTo(null);
      setResizable(false);
    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        rname = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        photo = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        browse = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jcombo = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(null);

        jLabel1.setFont(new java.awt.Font("Candara", 1, 48)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Add Room");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(290, 20, 220, 40);

        rname.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        rname.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255), 2));
        rname.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rnameActionPerformed(evt);
            }
        });
        getContentPane().add(rname);
        rname.setBounds(300, 110, 200, 40);

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Room Name");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(220, 120, 80, 20);

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText(" Category");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(220, 190, 80, 20);
        getContentPane().add(photo);
        photo.setBounds(300, 240, 200, 200);

        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText(" Photo");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(230, 300, 80, 20);

        browse.setText("Browse");
        browse.setOpaque(false);
        browse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browseActionPerformed(evt);
            }
        });
        getContentPane().add(browse);
        browse.setBounds(540, 300, 140, 30);

        jButton1.setText("Add Room");
        jButton1.setBorder(null);
        jButton1.setOpaque(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1);
        jButton1.setBounds(330, 460, 140, 30);

        jcombo.setFont(new java.awt.Font("Tahoma", 0, 13)); // NOI18N
        jcombo.setBorder(null);
        jcombo.setOpaque(false);
        jcombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcomboActionPerformed(evt);
            }
        });
        getContentPane().add(jcombo);
        jcombo.setBounds(300, 180, 200, 40);

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/backgroundicons/Webp.net-resizeimage(16).jpg"))); // NOI18N
        getContentPane().add(jLabel5);
        jLabel5.setBounds(0, 0, 800, 540);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void browseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browseActionPerformed
        JFileChooser jfc=new JFileChooser("C:\\Users\\acer\\Downloads");
        FileNameExtensionFilter filter = new FileNameExtensionFilter("Image Files", "jpeg", "jpg", "bmp", "png", "gif");
        jfc.setFileFilter(filter);
        jfc.setAcceptAllFileFilterUsed(false);
        int ans=jfc.showOpenDialog(this);
        
            
        if(ans==JFileChooser.APPROVE_OPTION)
        {
            try {
                f=jfc.getSelectedFile();
                BufferedImage img = ImageIO.read(f);
                //Image newimg = img.getScaledInstance(lbpreview.getWidth(), lbpreview.getHeight(), Image.SCALE_SMOOTH);
                BufferedImage newimg = resizephoto(img, photo.getWidth(), photo.getHeight());
                
                photo.setIcon(new ImageIcon(newimg));
            } catch (IOException ex) {
                Logger.getLogger(addroom.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        else
        {
            System.out.println("User Cancelled"); 
        }
        
    }//GEN-LAST:event_browseActionPerformed

    private void jcomboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcomboActionPerformed
           
              
    }//GEN-LAST:event_jcomboActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        String a,b;
        
        a=rname.getText();
        b=jcombo.getSelectedItem().toString();
        
        if(rname.equals("")||jcombo.getSelectedItem() == null||photo.getIcon() == null)
        {
           JOptionPane.showMessageDialog(this,"All Fields Are Mandatory");
        }
        else
        {
            try
        {
             HttpResponse<String> response= Unirest.post(GlobalData.hostname+"/addroom")
                                   .queryString("roomname",a)
                                   .queryString("category",b)
                                   .field("photo", f)
                                   .asString();
        
          if(response.getStatus() ==200)
          {
              String ans=response.getBody();
              JOptionPane.showMessageDialog(this,ans);
              
          }
        
        
        }
        catch(Exception ex)
        {
            ex.printStackTrace();
        }      
        }
        
        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void rnameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rnameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rnameActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
            try {
                UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
                java.awt.EventQueue.invokeLater(new Runnable() {
                    public void run() {
                        new addroom().setVisible(true);
                    }
                }); } catch (ClassNotFoundException ex) {
                Logger.getLogger(addroom.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                Logger.getLogger(addroom.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                Logger.getLogger(addroom.class.getName()).log(Level.SEVERE, null, ex);
            } catch (UnsupportedLookAndFeelException ex) {
                Logger.getLogger(addroom.class.getName()).log(Level.SEVERE, null, ex);
            }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browse;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JComboBox<String> jcombo;
    private javax.swing.JLabel photo;
    private javax.swing.JTextField rname;
    // End of variables declaration//GEN-END:variables

    private void fetchcategories() {
        try
        {
            jcombo.removeAll(); 
            HttpResponse<String> response = Unirest.get(GlobalData.hostname + "/fetchallcategories").asString();
            String ans = response.getBody();
            System.out.println(ans);
            StringTokenizer st = new StringTokenizer(ans, ";;");
            while (st.hasMoreTokens()) {
                String row = st.nextToken();
                StringTokenizer col = new StringTokenizer(row, "~~");
                String catname = col.nextToken();
                String desc=col.nextToken();
                jcombo.addItem(catname);
        
        
        }
        }
        
        catch(Exception ex)
        {
            ex.printStackTrace();
        }
        
        
    
}
    BufferedImage resizephoto(BufferedImage image, int width, int height) {
        BufferedImage bi = new BufferedImage(width, height, BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.addRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING, RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(image, 0, 0, width, height, null);
        g2d.dispose();
        return bi;
    }
}